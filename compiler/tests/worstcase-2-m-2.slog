;; Run the program
[(ReachesCfg e e e)
 <--
 (Prog e)]

[(Time e e)
 <--
 (Prog e)]
                                             
;;;;;;; app step ;;;;

;; Propagate free vars
[(Store y t0 t1 v vt0 vt1)
 <--
 (Store y lam0 lam1 v vt0 vt1)
 (FrProp t0 t1 lam0 lam1 y)]

[(FrProp t0 t1 lam0 lam1 y)
 <--
 (Step _ _ _ _ t0 t1 lam lam0 lam1)
 (Free y lam)]

;; Propagate args
[(Store x id t0 a0_lam a0_t0 a0_t1)
 <-- 
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

[(Store y id t0 a1_lam a1_t0 a1_t1)
 <-- 
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

;; Add step
[(Step id t0 t1 id_body id t0 clo_lam clo_t0 clo_t1)
 <--
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

;; Mark point as reached
[(ReachesCfg id_body id t0)
 <--
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

;; Mark clo as invoked
[(ReachesClo clo_lam clo_t0 clo_t1)
 <--
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

;; Mark context as found
[(Time id t0)
 <--
 (APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)]

;; Discover an application step
[(APP id t0 t1 clo_lam clo_t0 clo_t1 id_body x y a0_lam a0_t0 a0_t1 a1_lam a1_t0 a1_t1)
 <--
 (AEval id_a0 t0 t1 a0_lam a0_t0 a0_t1)
 (INT2 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1 x y id_body a1_lam a1_t0 a1_t1)]

[(INT2 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1 x y id_body a1_lam a1_t0 a1_t1)
 <--
 (AEval id_a1 t0 t1 a1_lam a1_t0 a1_t1)
 (INT1 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1 x y id_body)]

[(INT1 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1 x y id_body)
 <--
 (Lam clo_lam x y id_body)
 (INT0 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1)]

[(INT0 id id_f id_a0 id_a1 t0 t1 clo_lam clo_t0 clo_t1)
  <--
 (INT00 id id_f id_a0 id_a1 t0 t1)
 (AEval id_f t0 t1 clo_lam clo_t0 clo_t1)]

[(INT00 id id_f id_a0 id_a1 t0 t1)
 <--
 (App id id_f id_a0 id_a1)
 (ReachesCfg id t0 t1)]

; Local reachability
[(ReachesCfg e0 t0 t1)
 <--
 (ReachesCfg e t0 t1)
 (App e e0 e1 e2)]

[(ReachesCfg e1 t0 t1)
 <--
 (ReachesCfg e t0 t1)
 (App e e0 e1 e2)]

[(ReachesCfg e2 t0 t1)
 <--
 (ReachesCfg e t0 t1)
 (App e e0 e1 e2)]

;; Eval of lambdas 
[(AEval id t0 t1 id t0 t1)
 <--
 (ReachesCfg id t0 t1)
 (Lam id _ _ _)]

;; Eval of local parameter x at t 
[(AEval ref_id t0 t1 clo_lam clo_t0 clo_t1)
 <--
 (AE0 ref_id x t0 t1)
 (Store x t0 t1 clo_lam clo_t0 clo_t1)]

[(AE0 ref_id x t0 t1)
 <--
 (ReachesCfg ref_id t0 t1)
 (Var ref_id x)]

; Free variables
[(Free x e)
 <--
 (Var e x)]

[(Free x e)
 <--
 (App e e0 e1 e2)
 (Free x e0)]

[(Free x e)
 <--
 (App e e0 e1 e2)
 (Free x e1)]

[(Free x e)
 <--
 (App e e0 e1 e2)
 (Free x e2)]

[(Free x lam)
 <--
 (Free1 x z lam)
 (=/= x z)]

[(Free1 x z lam)
 <--
 (Free0 x y z lam)
 (=/= x y)]

[(Free0 x y z lam)
 <--
 (Lam lam y z bdy)
 (Free x bdy)]

;; program
;; '(program
;;   (app
;;    (lam
;;     "x"
;;     "k"
;;     (app
;;      (lam
;;       "f_1"
;;       "k"
;;       (app
;;        (ref "f_1")
;;        (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
;;        (lam
;;         "na0"
;;         "na1"
;;         (app
;;          (ref "f_1")
;;          (lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
;;          (ref "k")))))
;;      (lam
;;       "z_1"
;;       "k"
;;       (app
;;        (lam
;;         "f_2"
;;         "k"
;;         (app
;;          (ref "f_2")
;;          (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
;;          (lam
;;           "na0"
;;           "na1"
;;           (app
;;            (ref "f_2")
;;            (lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
;;            (ref "k")))))
;;        (lam
;;         "z_2"
;;         "k"
;;         (app
;;          (ref "k")
;;          (lam
;;           "w"
;;           "k"
;;           (app
;;            (ref "w")
;;            (ref "z_2")
;;            (lam
;;             "w"
;;             "na"
;;             (app
;;              (ref "w")
;;              (ref "z_1")
;;              (lam "v" "na" (app (ref "k") (ref "v") (ref "v")))))))
;;          (ref "k")))
;;        (ref "k")))
;;      (ref "k")))
;;    (lam "u" "k" (app (ref "u") (ref "u") (ref "k")))
;;    (lam
;;     "na0"
;;     "na1"
;;     (app
;;      (lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
;;      (lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
;;      (lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k")))))))
(Prog 1)
(Var 16 3)
(Var 83 78)
(Var 85 4)
(Var 76 32)
(Var 84 4)
(Var 44 4)
(Var 30 4)
(Var 117 113)
(Var 46 3)
(Var 64 4)
(Var 82 78)
(Var 17 3)
(Var 51 36)
(Var 91 88)
(Var 10 7)
(Var 103 99)
(Var 45 3)
(Var 93 4)
(Var 59 4)
(Var 81 4)
(Var 56 4)
(Var 69 66)
(Var 58 24)
(Var 70 61)
(Var 28 24)
(Var 104 4)
(Var 92 88)
(Var 116 113)
(Var 27 4)
(Var 118 4)
(Var 86 4)
(Var 111 4)
(Var 39 36)
(Var 110 106)
(Var 29 24)
(Var 15 4)
(Var 102 99)
(Var 57 24)
(Var 22 7)
(Var 75 66)
(Var 109 106)
(Lam 35 36 4 38)
(Lam 18 19 20 21)
(Lam 87 88 4 90)
(Lam 40 3 4 43)
(Lam 60 61 4 63)
(Lam 77 78 73 80)
(Lam 98 99 4 101)
(Lam 65 66 4 68)
(Lam 94 19 20 97)
(Lam 11 3 4 14)
(Lam 23 24 4 26)
(Lam 6 7 4 9)
(Lam 112 113 4 115)
(Lam 2 3 4 5)
(Lam 105 106 4 108)
(Lam 31 32 4 34)
(Lam 52 24 4 55)
(Lam 71 66 73 74)
(Lam 47 19 20 50)
(App 97 98 105 112)
(App 55 56 57 58)
(App 50 51 52 59)
(App 90 91 92 93)
(App 5 6 31 86)
(App 14 15 16 17)
(App 38 39 40 47)
(App 74 75 76 77)
(App 34 35 60 85)
(App 68 69 70 71)
(App 115 116 117 118)
(App 26 27 28 29)
(App 21 22 23 30)
(App 43 44 45 46)
(App 63 64 65 84)
(App 80 81 82 83)
(App 108 109 110 111)
(App 1 2 87 94)
(App 9 10 11 18)
(App 101 102 103 104)

