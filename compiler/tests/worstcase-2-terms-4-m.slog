;; Run the program
[(ReachesCfg x x x) (Time x x) <-- (Prog x)]

;; With an app step
[(Store x id t0 t1 t2 a0_lam a0_t0 a0_t1 a0_t2 a0_t3)                    ;; id,t0    a0_t0,a0_t1
 (Step id t0 t1 t2 t3 id_body id t0 t1 t2 clo_lam clo_t0 clo_t1 clo_t2 clo_t3)
 (ReachesCfg id_body id t0 t1 t2)
 (ReachesClo clo_lam clo_t0 clo_t1 clo_t2 clo_t3)
 (Time id t0 t1 t2)
 <--
 (App id idf ida0 ida1)
 (AEval id_f t0 t1 t2 t3 clo_lam clo_t0 clo_t1 clo_t2 clo_t3)
 (AEval id_a0 t0 t1 t2 t3 a0_lam a0_t0 a0_t1 a0_t2 a0_t3)
 (AEval id_a1 t0 t1 t2 t3 a1_lam a0_t0 a0_t1 a0_t2 a0_t3)                ;; a1_t0 a1_t1
 (Lam clo_lam x y id_body)
 (ReachesCfg id t0 t1 t2 t3)]

;; and eval of lambdas 
[(AEval id t0 t1 t2 t3 id t0 t1 t2 t3) <-- (Time t0 t1 t2 t3) (Lam id w0 w1 w2)] ;; w0/1/2 is "wildcard 0"

;; and eval of local parameter x at t 
[(AEval ref_id t0 t1 t2 t3 clo_lam clo_t0 clo_t1 clo_t2 clo_t3) <--
 (Var ref_id x)
 (ReachesClo clo_lam clo_t0 clo_t1 clo_t2 clo_t3)
 (Store x t0 t1 t2 t3 clo_lam clo_t0 clo_t1 clo_t2 clo_t3)]

;; otherise  propagate free variables
[(AEval id_ref t0 t1 t2 t3 clo_lam clo_t0 clo_t1 clo_t2 clo_t3) <--
 (Step id_call w0 w1 id_body t0 t1 t2 t3 tclo_lam to_clo_t0 to_clo_t1 to_clo_t2 to_clo_t3)
 (Lam tclo_lam p0 p1 tclo_lam_body) 
 (Var id_ref x) 
 (AEval id_ref lam_t0 lam_t1 lam_t2 lam_t3 clo_lam clo_t0 clo_t1 clo_t2 clo_t3)
 (=/= p0 x)
 (=/= p1 x)]

;; program
;; '(program
;;   (app
;;    (lam "x" "y" (app (ref "x") (ref "x") (ref "y")))
;;    (lam "x" "y" (app (ref "y") (ref "x") (ref "y")))
;;    (lam
;;     "x"
;;     "y"
;;     (app
;;      (ref "x")
;;      (lam
;;       "x"
;;       "y"
;;       (app
;;        (ref "x")
;;        (lam "x" "y" (app (ref "x") (ref "x") (ref "y")))
;;        (ref "y")))
;;      (ref "y")))))
(Prog 1)
(Var 24 1)
(Lam 12 0 1 13)
(Lam 15 0 1 16)
(Lam 2 0 1 3)
(Lam 7 0 1 8)
(Lam 18 0 1 19)
(App 16 17 18 23)
(App 13 14 15 24)
(App 8 9 10 11)
(App 19 20 21 22)
(App 3 4 5 6)
(App 1 2 7 12)
