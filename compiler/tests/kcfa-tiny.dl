.decl Prog(x:number)
.decl Lam(id:number,x:number,y:number,idbody:number)
.decl App(id:number,f:number,a0:number,a1:number)
.decl Var(id:number,var:number)
.decl Time(t0:number,t1:number)
.decl AEval(id:number,t0:number,t1:number,id1:number,ot0:number,ot1:number)
.output AEval
.decl ReachesCfg(id:number,t0:number,t1:number)
.output ReachesCfg
.decl Store(var:number,t0:number,t1:number,stored_lam:number,st0:number,st1:number)
.output Store
.decl Step(from:number,t0:number,t1:number,toid:number,to_t0:number,to_t1:number,clo_lam:number,clo_t0:number,clo_t1:number)
.output Step
.decl ReachesClo(id:number,t0:number,t1:number)
.output ReachesClo

// run the program:
ReachesCfg(x,x,x), Time(x,x) :- Prog(x).

// with an app step,
Store(x,id,t0,a0_lam,a0_t0,a0_t1),
Store(y,id,t0,a1_lam,a1_t0,a1_t1),
Step(id,t0,t1,id_body,id,t0,clo_lam,clo_t0,clo_t1),
ReachesCfg(id_body,id,t0),
ReachesClo(clo_lam,clo_t0,clo_t1),
Time(id,t0)
 :-
  App(id,idf,ida0,ida1),
  AEval(id_f,t0,t1,clo_lam,clo_t0,clo_t1),
  AEval(id_a0,t0,t1,a0_lam,a0_t0,a0_t1),
  AEval(id_a1,t0,t1,a1_lam,a1_t0,a1_t1),
  Lam(clo_lam,x,y,id_body),
  ReachesCfg(id,t0,t1).

// and eval of lambdas,
AEval(id,t0,t1,id,t0,t1) :- Time(t0,t1), Lam(id,_,_,_).

// and eval of local parameter x at t,
AEval(ref_id,t0,t1,clo_lam,clo_t0,clo_t1) :-
  Var(ref_id,x), ReachesClo(clo_lam,clo_t0,clo_t1),
  Store(x,t0,t1,clo_lam,clo_t0,clo_t1).

// otherise, propagate free variables
AEval(id_ref,t0,t1,clo_lam,clo_t0,clo_t1) :-
  Step(id_call,_,_,id_body,t0,t1,tclo_lam,tclo_t0,tclo_t1),
  Lam(tclo_lam,p0,p1,tclo_lam_body),
  Var(id_ref,x),
  AEval(id_ref,lam_t0,lam_t1,clo_lam,clo_t0,clo_t1),
  p0 != x,
  p1 != x.

// program
Ref(32, 1).
Ref(10, 0).
Ref(14, 0).
Ref(31, 1).
Ref(17, 0).
Ref(26, 0).
Ref(23, 0).
Ref(20, 0).
Ref(29, 1).
Ref(27, 0).
Ref(30, 1).
Ref(6, 1).
Ref(9, 1).
Ref(5, 0).
Ref(4, 0).
Ref(28, 1).
Ref(11, 1).
Program(1).
Lam(12, 0, 1, 13).
Lam(24, 0, 1, 25).
Lam(15, 0, 1, 16).
Lam(2, 0, 1, 3).
Lam(21, 0, 1, 22).
Lam(7, 0, 1, 8).
Lam(18, 0, 1, 19).
App(22, 23, 24, 29).
App(19, 20, 21, 30).
App(16, 17, 18, 31).
App(8, 9, 10, 11).
App(3, 4, 5, 6).
App(1, 2, 7, 12).
App(13, 14, 15, 32).
App(25, 26, 27, 28).
