ssign
;; Run the program
[(ReachesCfg e e e) (Time e e) <-- (Prog e)] ;; e e e is e e e ... (m + 1)
                                                 ;; e e is e e ... (m)

;; With an app step
[(Store x id t0 a0_lam a0_t0 a0_t1)                    ;; id,t0    a0_t0,a0_t1
 (Store y id t0 a1_lam a1_t0 a1_t1)                    ;; id,t0    a1_t0,a1_t1
 (Step id t0 t1 id_body id t0 clo_lam clo_t0 clo_t1)
 (ReachesCfg id_body id t0)
 (ReachesClo clo_lam clo_t0 clo_t1)
 (Time id t0)
 <--
 (App id id_f id_a0 id_a1)
 (AEval id_f t0 t1 clo_lam clo_t0 clo_t1)
 (AEval id_a0 t0 t1 a0_lam a0_t0 a0_t1)
 (AEval id_a1 t0 t1 a1_lam a1_t0 a1_t1)
 (Lam clo_lam x y id_body)
 (ReachesCfg id t0 t1)]

;; and eval of lambdas 
[(AEval id t0 t1 id t0 t1) <-- (Time t0 t1) (Lam id _ _ _)]

;; and eval of local parameter x at t 
[(AEval ref_id t0 t1 clo_lam clo_t0 clo_t1) <--
 (Var ref_id x)
 ;;(ReachesClo clo_lam clo_t0 clo_t1)
 (Store x t0 t1 clo_lam clo_t0 clo_t1)]

;; otherise  propagate free variables
[(AEval id_ref t0 t1 clo_lam clo_t0 clo_t1) <--
 (Step id_call _ _ id_body t0 t1 tclo_lam to_clo_t0 to_clo_t1)
 (Lam tclo_lam p0 p1 tclo_lam_body) 
 (Var id_ref x) 
 (AEval id_ref to_clo_t0 to_clo_t1 clo_lam clo_t0 clo_t1)
 (=/= p0 x)
 (=/= p1 x)]

;; program
;;intern table...
assigning 3
"x"
assigning 4
"k"
assigning 7
"f_1"
assigning 8
"k"
assigning 10
"f_1"
assigning 12
"x"
assigning 13
"k"
assigning 15
'(ref "k")
assigning 16
'(ref "x")
assigning 17
'(ref "x")
assigning 14
'(app (ref "k") (ref "x") (ref "x"))
assigning 11
'(lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
assigning 19
"na0"
assigning 20
"na1"
assigning 22
"f_1"
assigning 24
"y"
assigning 25
"k"
assigning 27
'(ref "k")
assigning 28
'(ref "y")
assigning 29
'(ref "y")
assigning 26
'(app (ref "k") (ref "y") (ref "y"))
assigning 23
'(lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
assigning 30
'(ref "k")
assigning 21
'(app "f_1" (lam "y" "k" (app (ref "k") (ref "y") (ref "y"))) (ref "k"))
assigning 18
'(lam
  "na0"
  "na1"
  (app "f_1" (lam "y" "k" (app (ref "k") (ref "y") (ref "y"))) (ref "k")))
assigning 9
'(app
  "f_1"
  (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
  (lam
   "na0"
   "na1"
   (app "f_1" (lam "y" "k" (app (ref "k") (ref "y") (ref "y"))) (ref "k"))))
assigning 6
'(lam
  "f_1"
  "k"
  (app
   "f_1"
   (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
   (lam
    "na0"
    "na1"
    (app "f_1" (lam "y" "k" (app (ref "k") (ref "y") (ref "y"))) (ref "k")))))
assigning 32
"z_1"
assigning 33
"k"
assigning 35
"w"
assigning 36
"k"
assigning 38
'(ref "w")
assigning 39
"z_1"
assigning 41
"v"
assigning 42
"na"
assigning 44
'(ref "k")
assigning 45
'(ref "v")
assigning 46
'(ref "v")
assigning 43
'(app (ref "k") (ref "v") (ref "v"))
assigning 40
'(lam "v" "na" (app (ref "k") (ref "v") (ref "v")))
assigning 37
'(app (ref "w") "z_1" (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))
assigning 34
'(lam
  "w"
  "k"
  (app (ref "w") "z_1" (lam "v" "na" (app (ref "k") (ref "v") (ref "v")))))
assigning 31
'(lam
  "z_1"
  "k"
  (lam
   "w"
   "k"
   (app (ref "w") "z_1" (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))))
assigning 47
'(ref "k")
assigning 5
'(app
  (lam
   "f_1"
   "k"
   (app
    "f_1"
    (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
    (lam
     "na0"
     "na1"
     (app "f_1" (lam "y" "k" (app (ref "k") (ref "y") (ref "y"))) (ref "k")))))
  (lam
   "z_1"
   "k"
   (lam
    "w"
    "k"
    (app (ref "w") "z_1" (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))))
  (ref "k"))
assigning 2
'(lam
  "x"
  "k"
  (app
   (lam
    "f_1"
    "k"
    (app
     "f_1"
     (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
     (lam
      "na0"
      "na1"
      (app
       "f_1"
       (lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
       (ref "k")))))
   (lam
    "z_1"
    "k"
    (lam
     "w"
     "k"
     (app (ref "w") "z_1" (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))))
   (ref "k")))
assigning 49
"u"
assigning 50
"k"
assigning 52
'(ref "u")
assigning 53
'(ref "u")
assigning 54
'(ref "k")
assigning 51
'(app (ref "u") (ref "u") (ref "k"))
assigning 48
'(lam "u" "k" (app (ref "u") (ref "u") (ref "k")))
assigning 56
"na0"
assigning 57
"na1"
assigning 60
"u0"
assigning 61
"k"
assigning 63
'(ref "u0")
assigning 64
'(ref "u0")
assigning 65
'(ref "k")
assigning 62
'(app (ref "u0") (ref "u0") (ref "k"))
assigning 59
'(lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
assigning 67
"u1"
assigning 68
"k"
assigning 70
'(ref "u1")
assigning 71
'(ref "u1")
assigning 72
'(ref "k")
assigning 69
'(app (ref "u1") (ref "u1") (ref "k"))
assigning 66
'(lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
assigning 74
"u2"
assigning 75
"k"
assigning 77
'(ref "u2")
assigning 78
'(ref "u2")
assigning 79
'(ref "k")
assigning 76
'(app (ref "u2") (ref "u2") (ref "k"))
assigning 73
'(lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k")))
assigning 58
'(app
  (lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
  (lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
  (lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k"))))
assigning 55
'(lam
  "na0"
  "na1"
  (app
   (lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
   (lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
   (lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k")))))
assigning 1
'(app
  (lam
   "x"
   "k"
   (app
    (lam
     "f_1"
     "k"
     (app
      "f_1"
      (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
      (lam
       "na0"
       "na1"
       (app
        "f_1"
        (lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
        (ref "k")))))
    (lam
     "z_1"
     "k"
     (lam
      "w"
      "k"
      (app
       (ref "w")
       "z_1"
       (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))))
    (ref "k")))
  (lam "u" "k" (app (ref "u") (ref "u") (ref "k")))
  (lam
   "na0"
   "na1"
   (app
    (lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
    (lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
    (lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k"))))))
;; (hash
;;  'App
;;  (set
;;   '(5 6 31 47)
;;   '(76 77 78 79)
;;   '(37 38 32 40)
;;   '(21 7 23 30)
;;   '(62 63 64 65)
;;   '(69 70 71 72)
;;   '(58 59 66 73)
;;   '(26 27 28 29)
;;   '(1 2 48 55)
;;   '(43 44 45 46)
;;   '(9 7 11 18)
;;   '(51 52 53 54)
;;   '(14 15 16 17))
;;  'Lam
;;  (set
;;   '(59 60 4 62)
;;   '(23 24 4 26)
;;   '(40 41 42 43)
;;   '(48 49 4 51)
;;   '(66 67 4 69)
;;   '(18 19 20 21)
;;   '(34 35 4 37)
;;   '(73 74 4 76)
;;   '(11 3 4 14)
;;   '(6 7 4 9)
;;   '(2 3 4 5)
;;   '(31 32 4 34)
;;   '(55 19 20 58))
;;  'Prog
;;  (set '(1))
;;  'Var
;;  (set
;;   '(53 49)
;;   '(16 3)
;;   '(71 67)
;;   '(72 4)
;;   '(45 41)
;;   '(44 4)
;;   '(30 4)
;;   '(64 60)
;;   '(70 67)
;;   '(38 35)
;;   '(54 4)
;;   '(77 74)
;;   '(78 74)
;;   '(65 4)
;;   '(47 4)
;;   '(79 4)
;;   '(46 41)
;;   '(28 24)
;;   '(52 49)
;;   '(27 4)
;;   '(63 60)
;;   '(29 24)
;;   '(15 4)
;;   '(17 3)))
;; '(program
;;   (app
;;    (lam
;;     "x"
;;     "k"
;;     (app
;;      (lam
;;       "f_1"
;;       "k"
;;       (app
;;        "f_1"
;;        (lam "x" "k" (app (ref "k") (ref "x") (ref "x")))
;;        (lam
;;         "na0"
;;         "na1"
;;         (app
;;          "f_1"
;;          (lam "y" "k" (app (ref "k") (ref "y") (ref "y")))
;;          (ref "k")))))
;;      (lam
;;       "z_1"
;;       "k"
;;       (lam
;;        "w"
;;        "k"
;;        (app
;;         (ref "w")
;;         "z_1"
;;         (lam "v" "na" (app (ref "k") (ref "v") (ref "v"))))))
;;      (ref "k")))
;;    (lam "u" "k" (app (ref "u") (ref "u") (ref "k")))
;;    (lam
;;     "na0"
;;     "na1"
;;     (app
;;      (lam "u0" "k" (app (ref "u0") (ref "u0") (ref "k")))
;;      (lam "u1" "k" (app (ref "u1") (ref "u1") (ref "k")))
;;      (lam "u2" "k" (app (ref "u2") (ref "u2") (ref "k")))))))
(Prog 1)
(Var 53 49)
(Var 16 3)
(Var 71 67)
(Var 72 4)
(Var 45 41)
(Var 44 4)
(Var 30 4)
(Var 64 60)
(Var 70 67)
(Var 38 35)
(Var 54 4)
(Var 77 74)
(Var 78 74)
(Var 65 4)
(Var 47 4)
(Var 79 4)
(Var 46 41)
(Var 28 24)
(Var 52 49)
(Var 27 4)
(Var 63 60)
(Var 29 24)
(Var 15 4)
(Var 17 3)
(Lam 59 60 4 62)
(Lam 23 24 4 26)
(Lam 40 41 42 43)
(Lam 48 49 4 51)
(Lam 66 67 4 69)
(Lam 18 19 20 21)
(Lam 34 35 4 37)
(Lam 73 74 4 76)
(Lam 11 3 4 14)
(Lam 6 7 4 9)
(Lam 2 3 4 5)
(Lam 31 32 4 34)
(Lam 55 19 20 58)
(App 5 6 31 47)
(App 76 77 78 79)
(App 37 38 32 40)
(App 21 7 23 30)
(App 62 63 64 65)
(App 69 70 71 72)
(App 58 59 66 73)
(App 26 27 28 29)
(App 1 2 48 55)
(App 43 44 45 46)
(App 9 7 11 18)
(App 51 52 53 54)
(App 14 15 16 17)
